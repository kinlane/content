---
layout: post
title: 'Post Acquisition Rights for API Developers'
---
<p><img style="padding: 15px;" src="http://kinlane-productions.s3.amazonaws.com/api-evangelist/face/face-com-logo.jpeg" alt="" width="200" align="right" /></p>
<p>There was another shot fired in the <a title="API Trade Wars" href="http://www.apievangelist.com/2012/06/29/the-api-economy-welcomes-its-early-trade-wars/">API trade wars</a> this last week, this time through an acquisition by Facebook of facial recognition API Face.com.   And as usual there is great coverage at the NextWeb with, <a href="http://thenextweb.com/facebook/2012/07/07/that-was-quick-facebook-shuts-down-face-com-apis-kills-klik-app-enrages-developers/">That was quick Facebook shuts down Face.com APIs</a>, and at ProgrammableWeb with, <a title="Facebook API Euthanasia Continues: Keeping Face.com to Itself" href="http://blog.programmableweb.com/2012/07/07/facebook-api-euthanasia-continues-keeping-face-com-to-itself/">Facebook API Euthanasia Continues: Keeping Face.com to Itself</a>.</p>
<p>While tightening control over over API usage, charging for a once free API, and breaking an API regularly, are some of the most common API ecosystem offenses made by API owners--I think acquisition is one of the most damaging and blinding ways an API can burn it's developers.</p>
<p>In addition to discussing these API ecosystem battles on <a title="API Voice">API Voice</a> I&rsquo;m determined to find solutions to these problems, so companies can keep deploying APIs knowing devs will still use them, and developers can confidently build around public APIs (which you can do, despite popular opinion).</p>
<p>At first thought it seems like this is something for the terms of use, which historically is something that doesn&rsquo;t lean in the developers favor, thus something developers look at with distrust. &nbsp;But It seems to me, that developers should start demanding more from a companies API terms of use, before we invest in building on an API.  You know back when the API needs us, and we have leverage, not after they&rsquo;ve gotten all big and successful, and don&rsquo;t really need us anymore.</p>
<p>Developers need to start demanding more deprecation standards like Google uses in their API terms of use:</p>
<blockquote><em>1.3 Deprecation. If Google in its discretion chooses to cease providing the current version of the Service, whether through discontinuation of the Service or by upgrading the Service to a newer version, the current version of the Service will be deprecated and become a "Deprecated Version" of the Service. Google will issue an announcement if the current version of the Service will be deprecated. For a period of three years after an announcement (the "Deprecation Period"), Google will use commercially reasonable efforts to continue to operate the Deprecated Version of the Service and to respond to problems with the Deprecated Version of the Service deemed by Google in its discretion to be critical. During the Deprecation Period, no new features will be added to the Deprecated Version of the Service.</em></blockquote>
<p>I&rsquo;m not a lawyer, and I don&rsquo;t play one on TV, so I&rsquo;m not sure how realistic it would be for an API to include some sort of post acquisition deprecation, and it be required for the purchasing company to honor these deprecation policies.  They could work like real estate covenences, that you have to follow after you purchase a property, and are attached to the deed.</p>
<p>I know many of the naysayers will call me naive for making these demands, and that I live in some sort of API utopia.  But the reality of it is,  APIs need developers and they welcome us in when APIs are brand spank&rsquo;n new, and we help grow their platforms and companies, assisting in making them acquisition targets.</p>
<p>Developers need to get more picky about which APIs we&rsquo;ll use, based upon their treatment of developers--and get more demanding about there being more developer favoring terms of use, privacy policy and branding requirements.</p>