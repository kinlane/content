---
layout: post
title: 'BandPage Successfully Pivots After Significant Zucker Punch'
---
<p><a title="BandPage" href="http://www.bandpage.com/"><img style="padding: 15px;" src="http://kinlane-productions.s3.amazonaws.com/api-evangelist/bandpage/BandPage-Logo-1.png" alt="" width="150" align="right" /></a></p>
<p>When you are building on someone else&rsquo;s platform, you have to roll with any punches that get thrown your way. This is the nature of API development, and while we can hope that API owners are going to be as sensitive to developers as possible, it is ultimately the developers responsibility to accept change.</p>
<p>I stumbled across an old friend yesterday and got to hear a great story of a startup that grew up in the Facebook ecosystem, but recently had to pivot after being &ldquo;Zucker Punched&rdquo; by Facebook, when the social network made changes to the timeline layout.</p>
<p><a title="BandPage" href="http://www.bandpage.com/">BandPage</a>, formerly known as RootMusic had made a name for itself using the Facebook platform, and delivering a tool bands could use to promote themselves on the popular social network.  But in February 2012, when Facebook moved Facebook Pages onto the Facebook timeline, it removed the ability for musicians to set BandPage as a default landing page, changing the way users could navigate to an artist&rsquo;s BandPage.</p>
<p><img style="padding: 15px; display: block; margin-left: auto; margin-right: auto;" src="http://kinlane-productions.s3.amazonaws.com/api-evangelist/bandpage/bandpage-appdata.png" alt="" width="500" /></p>
<p>While the changes by Facebook significantly impacted BandPage&rsquo;s traffic, they were able to quickly recover. Since the company has a significant financial cushion and a rockstar development team, they were able to quickly engineer and deploy a new solution that they feel will not just allow them to recover, but allow bands to distribute their presence to any site or platform, not just to Facebook.</p>
<p>While not all startups have the ability to pivot so fast and efficiently, they should have a contingency plan regarding what they will do when the platform they are building on makes changes--allowing you to survive a good &ldquo;Zucker Punch&rdquo; on the Facebook platform, being &ldquo;Dicked Over&rdquo; in the Twitter ecosystem, or whatever might come your way in the seemingly volatile world of API development.</p>