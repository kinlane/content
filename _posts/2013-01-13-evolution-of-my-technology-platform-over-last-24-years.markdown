---
layout: post
title: 'Evolution of My Technology Platform Over Last 24 Years'
---
<p><img style="padding: 15px;" src="https://s3.amazonaws.com/kinlane-productions/cobol.jpeg" alt="" width="150" align="right" /></p>
<p>Every couple of years I migrate my platform a little bit forward (hopefully) and begin weaving in new tools into my personal and business world.  I recently spent some time looking back, and trying to map out the last 24 years of my professional technology career--in hopes of helping me understand how far I've come.</p>
<p><strong>1988</strong> - When I first started programming, I was still in high school.  I was recommended for a job by my high school computer science teacher Mr. Smith and went to work for Mt Rose Software where I spent my time assisting the owner in building student information systems in Cobol.  We compiled, distributed and installed this software ourselves.</p>
<p><strong>1993</strong> - As we made our way into the 1990's we rewrote the codebase from Cobol to Foxpro, but still the systems were compiled and installed database systems, that we had to distribute to all school districts manualy.  No servers or Internet in my world yet.</p>
<p><strong>1995</strong> - In 1995 the Internet started to become more prominent in my daily business world, but much of the work I did was around building database systems for music, commerce and non-profits.  I did much of this work in Microsoft Access, but when I started doing work for non-profits I started using Filemaker Pro.  This is when I started building web pages using HTML, but at this point they were static, hand-crafted sites without much that was dynamic.</p>
<p><strong>1998</strong> - I remember trying to play with Frontpage and build dynamic sites and being very frustrated.  I discovered Microsoft Internet Information Server (IIS), which was an add-on to the Windows NT server.  I began building dynamic web sites using Active Server Pages (ASP) and Microsoft Access databases.  Due to locks on the database I quickly discovered SQL Server and began launching separate web and database servers using Windows NT.</p>
<p><strong>2001</strong> - By 2001 I was playing around with new Microsoft tools like .NET and more robust languages like C#, and continued to use ASP, SQL Server and Windows Server with IIS to deliver websites.  This formula would remain constant for a few more years, assisting me in building some pretty large, dynamic web sites / applications.</p>
<p><strong>2004</strong> - In 2004 I faced a major rewrite of my companies custom content management system.  I had zero confidence in .NET at this point and rather than continue using an obsolete language, I opted to replace ASP with PHP and SQL Server with MySQL and being the migration to open source tools.  I still maintained my own Windows server as I had invested a lot in hardware, software as well as server management scripts in classic ASP.</p>
<p><strong>2006</strong> - This year was the beginning of cloud computing for me.  I was an early adopter of Amazon S3 and immediately saw the potential for storing heavy objects on the new platform.  While I still ran my own server farm, with a flavor of Windows, MySQL and PHP (WAMP), I would story all images, CSS, JS, PDF and all objects centrally at Amazon S3.</p>
<p><strong>2008</strong> - Once Amazon came out with Amazon EC2, I was hooked on the cloud.  I was facing buying new hardware and opted to migrate everything to the cloud.  The language, server and database remained the same, but I moved from my own colo facility and went entirely into the Amazon Cloud.  Running Windows instances on Amazon EC2, keeping storage at Amazon S3--selling all of my server infrastructure.</p>
<p><strong>2010</strong> - As Amazon continue to add to their stack I took advantage of the scalability of Amazon RDS.  I stopped deploying my own servers running MySQL and depended exclusively on MySQL running on RDS.  I also opted to finally ditch Windows Server as my primary server OS at this time, and began using Fedora Linux w/ Apache as my base OS and web server.  I was finally a full LAMP stack running exclusively in the cloud.</p>
<p><strong>2013</strong> This year I'm still keeping my core LAMP stack running the cloud, but it is becoming just the core of what I call the "Laneworks Network".  While I still rely on LAMP to do the heavy lifting an data crunching in the clouds, I am migrating projects and public sites to run as Github repositories using Github Pages.  This new approach uses Github Pages for static pages, Jekyll for the blog and JSON output from the core lane works on a schedule, taking advantage of mustache templates and JavaScript for display.</p>
<p>I have been pushing the boundaries of what I know, and which tools I use for 24 years now.  I'm excited about the potential of all my sites and projects being completely open source and running as exclusively client side projects on the Internet.  i feel the potential is much greater when I leverage the open and social environment of Github.  90% of all my work be open, public repositories with only a handful held back as private repositories.</p>
<p>Additionally, a growing part of my platform is dependent on APIs.  APIs I create or those of providers like AWS to Pinboard.  While i still rely on my core Laneworks operations to make things function, in 2013 my world is becoming mostly &nbsp;API driven client side applications written in HTML, CSS and JavaScript.</p>
<p>I'm excited for the potential!</p>