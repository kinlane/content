---
layout: post
title: 'All WordPress.com JSON APIs Are Now HTTPS Only'
---
<p><img style="padding: 15px;" src="https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-padlock.png" alt="" width="150" align="right" /></p>
<p>I'm always on the hunt for stories about how API providers are securing (or not), their APIs. In 2015 I think these stories will become increasingly important, as more API driven platforms are looking for guidance around securing their own platforms, as well as protecting the interests of their customers. Front and center in each of these API security stories will be SSL encryption, and going beyond just SSl support, to enforcement of SSL across all API pipes.</p>
<p>Following this theme, <a href="https://developer.wordpress.com/2015/01/15/a-more-secure-rest-api/">WordPress.com just announced that they are going &ldquo;HTTPS only for all API endpoints</a>:</p>
<blockquote><em> Because privacy and security are important to users across the internet, many services have begun to encrypt the connection between a user&rsquo;s browser and their servers. The use of SSL (or TLS) largely eliminates the likelihood that a &ldquo;man-in-the-middle&rdquo; is able to monitor a user&rsquo;s activities on the web. </em></blockquote>
<blockquote><em>To this end, WordPress.com is joining the likes of Google and Facebook in encrypting all of the traffic sent across our network. We are currently in the process of forcing many of our services to be accessible through HTTPS exclusively. </em></blockquote>
<blockquote><em> It was previously possible to access the WordPress.com/Jetpack JSON API through HTTP only for unauthenticated requests. As part of the SSL transition, all public-api.wordpress.com endpoints are now accessible via HTTPS only. Any requests made to the HTTP version of the URL will now 301 redirect to the HTTPS version. </em></blockquote>
<p>Nobody wants to be the next security or privacy breach story dominating the headlines, and enforcing HTTPS for APIs that transmit user data is where every API provider should be starting. If your APIs offer of publicly available data, through an open API, it is a different story, however if you are transmitting any content or data for 3rd party users, you should be enforcing SSL for all of your API pipes.</p>
<p>This type of post reflects what I do as the API Evangelist. Shed light on the healthy patterns that API providers are using, and sharing them across my network, helping make other API providers aware of the best practices across the space. I&rsquo;m hoping I can do at least one of the SSL story a month in 2015, brining the topic front and center for all API providers, and their consumers.</p>
<p><em>P.S. This is something I'm working across my own network as well.</em></p>